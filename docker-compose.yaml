version: '3.7'

services:

  pg:
    image: postgres:13-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg:/var/lib/postgresql/data
      - ./backup:/home

  redis:
    image: redis:6-alpine
    read_only: true
    volumes:
      - redis:/data

  celery:
    build: .
    command: celery -A url_cutter.connections.celery worker --loglevel=info
    depends_on:
      - pg
      - redis
    env_file: .env

  celery_beat:
    build: .
    command: celery -A url_cutter.connections.celery beat --loglevel=info
    depends_on:
      - pg
      - redis
      - celery
    env_file: .env

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - core
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  core:
    build: .
    entrypoint: ['/bin/sh', '/srv/src/entrypoint.sh']
    depends_on:
      - pg
      - redis
      - celery
      - celery_beat
    env_file: .env
    environment:
      PYTHONUNBUFFERED: '1'
      PYTHONDONTWRITEBYTECODE: '1'
    volumes:
      - ./migrations:/srv/src/migrations


volumes:
  pg:
  redis:
